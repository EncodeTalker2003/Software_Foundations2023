DIGEST 1d6064362679ebe4a4fcdd727f0dc4f5
FSLF.Rules
R102:116 SLF.LibSepReference <> <> lib
R136:140 SLF.Basic <> <> lib
R163:165 SLF.LibInt <> ::Int_scope:'int' not
R187:189 SLF.LibSepReference <> trm ind
R213:215 SLF.LibSepReference <> val ind
R237:239 SLF.LibSepReference <> loc def
R261:265 SLF.LibSepReference SepSimplArgs hprop def
R290:291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R287:289 SLF.LibSepReference <> val ind
R292:296 SLF.LibSepReference SepSimplArgs hprop def
prf 2013:2022 <> triple_seq
binder 2033:2034 <> t1:1
binder 2036:2037 <> t2:2
binder 2039:2039 <> H:3
binder 2041:2041 <> Q:4
binder 2043:2044 <> H1:5
R2074:2079 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2049:2054 SLF.LibSepReference <> triple def
binder 2066:2066 <> v:6
R2071:2072 SLF.Rules <> H1:5 var
R2059:2059 SLF.Rules <> H:3 var
R2056:2057 SLF.Rules <> t1:1 var
R2094:2099 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2080:2085 SLF.LibSepReference <> triple def
R2093:2093 SLF.Rules <> Q:4 var
R2090:2091 SLF.Rules <> H1:5 var
R2087:2088 SLF.Rules <> t2:2 var
R2100:2105 SLF.LibSepReference <> triple def
R2125:2125 SLF.Rules <> Q:4 var
R2123:2123 SLF.Rules <> H:3 var
R2108:2114 SLF.LibSepReference <> trm_seq constr
R2119:2120 SLF.Rules <> t2:2 var
R2116:2117 SLF.Rules <> t1:1 var
R2546:2551 SLF.LibSepReference <> triple def
R2571:2578 SLF.LibSepReference <> eval_seq constr
R2571:2578 SLF.LibSepReference <> eval_seq constr
prf 3652:3661 <> triple_let
binder 3672:3672 <> x:7
binder 3674:3675 <> t1:8
binder 3677:3678 <> t2:9
binder 3680:3681 <> Q1:10
binder 3683:3683 <> H:11
binder 3685:3685 <> Q:12
R3704:3709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3690:3695 SLF.LibSepReference <> triple def
R3702:3703 SLF.Rules <> Q1:10 var
R3700:3700 SLF.Rules <> H:11 var
R3697:3698 SLF.Rules <> t1:8 var
R3710:3710 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3754:3760 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 3718:3719 <> v1:13
R3722:3727 SLF.LibSepReference <> triple def
R3753:3753 SLF.Rules <> Q:12 var
R3746:3747 SLF.Rules <> Q1:10 var
R3749:3750 SLF.Rules <> v1:13 var
R3730:3734 SLF.LibSepReference <> subst def
R3741:3742 SLF.Rules <> t2:9 var
R3738:3739 SLF.Rules <> v1:13 var
R3736:3736 SLF.Rules <> x:7 var
R3761:3766 SLF.LibSepReference <> triple def
R3788:3788 SLF.Rules <> Q:12 var
R3786:3786 SLF.Rules <> H:11 var
R3769:3775 SLF.LibSepReference <> trm_let constr
R3782:3783 SLF.Rules <> t2:9 var
R3779:3780 SLF.Rules <> t1:8 var
R3777:3777 SLF.Rules <> x:7 var
R3829:3836 SLF.LibSepReference <> eval_let constr
R3829:3836 SLF.LibSepReference <> eval_let constr
prf 4251:4264 <> triple_if_case
binder 4275:4275 <> b:14
binder 4277:4278 <> t1:15
binder 4280:4281 <> t2:16
binder 4283:4283 <> H:17
binder 4285:4285 <> Q:18
R4290:4290 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4316:4322 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4299:4302 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4292:4294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4291:4291 SLF.Rules <> b:14 var
R4295:4298 Coq.Init.Datatypes <> true constr
R4303:4308 SLF.LibSepReference <> triple def
R4315:4315 SLF.Rules <> Q:18 var
R4313:4313 SLF.Rules <> H:17 var
R4310:4311 SLF.Rules <> t1:15 var
R4323:4323 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4350:4356 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4333:4336 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4325:4327 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4324:4324 SLF.Rules <> b:14 var
R4328:4332 Coq.Init.Datatypes <> false constr
R4337:4342 SLF.LibSepReference <> triple def
R4349:4349 SLF.Rules <> Q:18 var
R4347:4347 SLF.Rules <> H:17 var
R4344:4345 SLF.Rules <> t2:16 var
R4357:4362 SLF.LibSepReference <> triple def
R4394:4394 SLF.Rules <> Q:18 var
R4392:4392 SLF.Rules <> H:17 var
R4365:4370 SLF.LibSepReference <> trm_if constr
R4388:4389 SLF.Rules <> t2:16 var
R4385:4386 SLF.Rules <> t1:15 var
R4373:4380 SLF.LibSepReference <> val_bool constr
R4382:4382 SLF.Rules <> b:14 var
R4638:4643 SLF.LibSepReference <> triple def
R4663:4669 SLF.LibSepReference <> eval_if constr
R4663:4669 SLF.LibSepReference <> eval_if constr
prf 4861:4869 <> triple_if
R4883:4886 Coq.Init.Datatypes <> bool ind
binder 4881:4881 <> b:19
binder 4889:4890 <> t1:20
binder 4892:4893 <> t2:21
binder 4895:4895 <> H:22
binder 4897:4897 <> Q:23
R4935:4940 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4902:4907 SLF.LibSepReference <> triple def
R4934:4934 SLF.Rules <> Q:23 var
R4932:4932 SLF.Rules <> H:22 var
R4913:4913 SLF.Rules <> b:19 var
R4928:4929 SLF.Rules <> t2:21 var
R4920:4921 SLF.Rules <> t1:20 var
R4941:4946 SLF.LibSepReference <> triple def
R4967:4967 SLF.Rules <> Q:23 var
R4965:4965 SLF.Rules <> H:22 var
R4949:4954 SLF.LibSepReference <> trm_if constr
R4961:4962 SLF.Rules <> t2:21 var
R4958:4959 SLF.Rules <> t1:20 var
R4956:4956 SLF.Rules <> b:19 var
R5004:5010 SLF.LibSepReference <> eval_if constr
R5004:5010 SLF.LibSepReference <> eval_if constr
prf 5749:5758 <> triple_val
binder 5769:5769 <> v:24
binder 5771:5771 <> H:25
binder 5773:5773 <> Q:26
R5787:5792 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5779:5783 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'==>'_x not
R5778:5778 SLF.Rules <> H:25 var
R5784:5784 SLF.Rules <> Q:26 var
R5786:5786 SLF.Rules <> v:24 var
R5793:5798 SLF.LibSepReference <> triple def
R5814:5814 SLF.Rules <> Q:26 var
R5812:5812 SLF.Rules <> H:25 var
R5801:5807 SLF.LibSepReference <> trm_val constr
R5809:5809 SLF.Rules <> v:24 var
R5851:5858 SLF.LibSepReference <> eval_val constr
R5851:5858 SLF.LibSepReference <> eval_val constr
prf 6270:6287 <> triple_val_minimal
binder 6298:6298 <> v:27
R6303:6308 SLF.LibSepReference <> triple def
binder 6331:6331 <> r:28
R6336:6337 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R6343:6343 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R6339:6341 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6338:6338 SLF.Rules <> r:28 var
R6342:6342 SLF.Rules <> v:27 var
R6322:6324 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R6311:6317 SLF.LibSepReference <> trm_val constr
R6319:6319 SLF.Rules <> v:27 var
R6377:6386 SLF.Rules <> triple_val thm
R6377:6386 SLF.Rules <> triple_val thm
prf 6797:6807 <> triple_val'
binder 6818:6818 <> v:29
binder 6820:6820 <> H:30
binder 6822:6822 <> Q:31
R6836:6841 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6828:6832 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'==>'_x not
R6827:6827 SLF.Rules <> H:30 var
R6833:6833 SLF.Rules <> Q:31 var
R6835:6835 SLF.Rules <> v:29 var
R6842:6847 SLF.LibSepReference <> triple def
R6863:6863 SLF.Rules <> Q:31 var
R6861:6861 SLF.Rules <> H:30 var
R6850:6856 SLF.LibSepReference <> trm_val constr
R6858:6858 SLF.Rules <> v:29 var
R6897:6915 SLF.LibSepReference <> triple_conseq_frame thm
R6897:6915 SLF.LibSepReference <> triple_conseq_frame thm
R6929:6946 SLF.Rules <> triple_val_minimal thm
R6929:6946 SLF.Rules <> triple_val_minimal thm
prf 7391:7404 <> triple_let_val
binder 7415:7415 <> x:32
binder 7417:7418 <> v1:33
binder 7420:7421 <> t2:34
binder 7423:7423 <> H:35
binder 7425:7425 <> Q:36
R7455:7460 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7429:7434 SLF.LibSepReference <> triple def
R7454:7454 SLF.Rules <> Q:36 var
R7452:7452 SLF.Rules <> H:35 var
R7437:7441 SLF.LibSepReference <> subst def
R7448:7449 SLF.Rules <> t2:34 var
R7445:7446 SLF.Rules <> v1:33 var
R7443:7443 SLF.Rules <> x:32 var
R7461:7466 SLF.LibSepReference <> triple def
R7488:7488 SLF.Rules <> Q:36 var
R7486:7486 SLF.Rules <> H:35 var
R7469:7475 SLF.LibSepReference <> trm_let constr
R7482:7483 SLF.Rules <> t2:34 var
R7479:7480 SLF.Rules <> v1:33 var
R7477:7477 SLF.Rules <> x:32 var
R7521:7530 SLF.Rules <> triple_let thm
binder 7537:7537 <> v:37
R7551:7554 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*'_x not
R7542:7543 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R7550:7550 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R7545:7547 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7544:7544 SLF.Rules <> v:37 var
R7521:7530 SLF.Rules <> triple_let thm
binder 7537:7537 <> v:38
R7551:7554 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*'_x not
R7542:7543 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R7550:7550 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R7545:7547 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7544:7544 SLF.Rules <> v:38 var
R7570:7579 SLF.Rules <> triple_val thm
R7570:7579 SLF.Rules <> triple_val thm
R7609:7620 SLF.LibSepReference <> triple_hpure thm
R7609:7620 SLF.LibSepReference <> triple_hpure thm
prf 8494:8503 <> triple_fun
binder 8514:8514 <> x:39
binder 8516:8517 <> t1:40
binder 8519:8519 <> H:41
binder 8521:8521 <> Q:42
R8548:8553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8527:8531 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'==>'_x not
R8526:8526 SLF.Rules <> H:41 var
R8532:8532 SLF.Rules <> Q:42 var
R8535:8541 SLF.LibSepReference <> val_fun constr
R8545:8546 SLF.Rules <> t1:40 var
R8543:8543 SLF.Rules <> x:39 var
R8554:8559 SLF.LibSepReference <> triple def
R8578:8578 SLF.Rules <> Q:42 var
R8576:8576 SLF.Rules <> H:41 var
R8562:8568 SLF.LibSepReference <> trm_fun constr
R8572:8573 SLF.Rules <> t1:40 var
R8570:8570 SLF.Rules <> x:39 var
R8615:8622 SLF.LibSepReference <> eval_fun constr
R8615:8622 SLF.LibSepReference <> eval_fun constr
prf 8849:8858 <> triple_fix
binder 8869:8869 <> f:43
binder 8871:8871 <> x:44
binder 8873:8874 <> t1:45
binder 8876:8876 <> H:46
binder 8878:8878 <> Q:47
R8907:8912 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8884:8888 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'==>'_x not
R8883:8883 SLF.Rules <> H:46 var
R8889:8889 SLF.Rules <> Q:47 var
R8892:8898 SLF.LibSepReference <> val_fix constr
R8904:8905 SLF.Rules <> t1:45 var
R8902:8902 SLF.Rules <> x:44 var
R8900:8900 SLF.Rules <> f:43 var
R8913:8918 SLF.LibSepReference <> triple def
R8939:8939 SLF.Rules <> Q:47 var
R8937:8937 SLF.Rules <> H:46 var
R8921:8927 SLF.LibSepReference <> trm_fix constr
R8933:8934 SLF.Rules <> t1:45 var
R8931:8931 SLF.Rules <> x:44 var
R8929:8929 SLF.Rules <> f:43 var
R8976:8983 SLF.LibSepReference <> eval_fix constr
R8976:8983 SLF.LibSepReference <> eval_fix constr
prf 9673:9686 <> triple_app_fun
binder 9697:9697 <> x:48
binder 9699:9700 <> v1:49
binder 9702:9703 <> v2:50
binder 9705:9706 <> t1:51
binder 9708:9708 <> H:52
binder 9710:9710 <> Q:53
R9732:9737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9717:9719 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9715:9716 SLF.Rules <> v1:49 var
R9720:9726 SLF.LibSepReference <> val_fun constr
R9730:9731 SLF.Rules <> t1:51 var
R9728:9728 SLF.Rules <> x:48 var
R9764:9769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9738:9743 SLF.LibSepReference <> triple def
R9763:9763 SLF.Rules <> Q:53 var
R9761:9761 SLF.Rules <> H:52 var
R9746:9750 SLF.LibSepReference <> subst def
R9757:9758 SLF.Rules <> t1:51 var
R9754:9755 SLF.Rules <> v2:50 var
R9752:9752 SLF.Rules <> x:48 var
R9770:9775 SLF.LibSepReference <> triple def
R9795:9795 SLF.Rules <> Q:53 var
R9793:9793 SLF.Rules <> H:52 var
R9778:9784 SLF.LibSepReference <> trm_app constr
R9789:9790 SLF.Rules <> v2:50 var
R9786:9787 SLF.Rules <> v1:49 var
R9834:9845 SLF.LibSepReference <> eval_app_fun constr
R9834:9845 SLF.LibSepReference <> eval_app_fun constr
prf 10126:10139 <> triple_app_fix
binder 10150:10151 <> v1:54
binder 10153:10154 <> v2:55
binder 10156:10156 <> f:56
binder 10158:10158 <> x:57
binder 10160:10161 <> t1:58
binder 10163:10163 <> H:59
binder 10165:10165 <> Q:60
R10189:10194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10172:10174 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10170:10171 SLF.Rules <> v1:54 var
R10175:10181 SLF.LibSepReference <> val_fix constr
R10187:10188 SLF.Rules <> t1:58 var
R10185:10185 SLF.Rules <> x:57 var
R10183:10183 SLF.Rules <> f:56 var
R10234:10239 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10195:10200 SLF.LibSepReference <> triple def
R10233:10233 SLF.Rules <> Q:60 var
R10231:10231 SLF.Rules <> H:59 var
R10203:10207 SLF.LibSepReference <> subst def
R10215:10219 SLF.LibSepReference <> subst def
R10226:10227 SLF.Rules <> t1:58 var
R10223:10224 SLF.Rules <> v1:54 var
R10221:10221 SLF.Rules <> f:56 var
R10211:10212 SLF.Rules <> v2:55 var
R10209:10209 SLF.Rules <> x:57 var
R10240:10245 SLF.LibSepReference <> triple def
R10265:10265 SLF.Rules <> Q:60 var
R10263:10263 SLF.Rules <> H:59 var
R10248:10254 SLF.LibSepReference <> trm_app constr
R10259:10260 SLF.Rules <> v2:55 var
R10256:10257 SLF.Rules <> v1:54 var
R10304:10315 SLF.LibSepReference <> eval_app_fix constr
R10304:10315 SLF.LibSepReference <> eval_app_fix constr
ax 11250:11257 <> eval_add
binder 11268:11268 <> s:61
binder 11270:11271 <> n1:62
binder 11273:11274 <> n2:63
binder 11276:11276 <> Q:64
R11304:11309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11281:11281 SLF.Rules <> Q:64 var
R11284:11290 SLF.LibSepReference <> val_int constr
R11295:11297 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11293:11294 SLF.Rules <> n1:62 var
R11298:11299 SLF.Rules <> n2:63 var
R11303:11303 SLF.Rules <> s:61 var
R11310:11313 SLF.LibSepReference <> eval ind
R11353:11353 SLF.Rules <> Q:64 var
R11318:11324 SLF.LibSepReference <> val_add constr
R11327:11333 SLF.LibSepReference <> val_int constr
R11335:11336 SLF.Rules <> n1:62 var
R11340:11346 SLF.LibSepReference <> val_int constr
R11348:11349 SLF.Rules <> n2:63 var
R11315:11315 SLF.Rules <> s:61 var
prf 11552:11561 <> triple_add
binder 11572:11573 <> n1:66
binder 11575:11576 <> n2:67
R11581:11586 SLF.LibSepReference <> triple def
binder 11621:11621 <> r:68
R11626:11627 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R11649:11649 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R11629:11631 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11628:11628 SLF.Rules <> r:68 var
R11632:11638 SLF.LibSepReference <> val_int constr
R11643:11645 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11641:11642 SLF.Rules <> n1:66 var
R11646:11647 SLF.Rules <> n2:67 var
R11608:11610 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R11589:11595 SLF.LibSepReference <> val_add constr
R11597:11598 SLF.Rules <> n1:66 var
R11600:11601 SLF.Rules <> n2:67 var
R11687:11694 SLF.Rules <> eval_add defax
R11687:11694 SLF.Rules <> eval_add defax
R11706:11715 SLF.LibSepReference SepSimplArgs hempty_inv thm
R11706:11715 SLF.LibSepReference SepSimplArgs hempty_inv thm
R11730:11740 SLF.LibSepReference SepSimplArgs hpure_intro thm
R11730:11740 SLF.LibSepReference SepSimplArgs hpure_intro thm
ax 12113:12120 <> eval_div
binder 12131:12131 <> s:69
binder 12133:12134 <> n1:70
binder 12136:12137 <> n2:71
binder 12139:12139 <> Q:72
R12151:12156 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12146:12149 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R12144:12145 SLF.Rules <> n2:71 var
R12185:12190 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12157:12157 SLF.Rules <> Q:72 var
R12160:12166 SLF.LibSepReference <> val_int constr
R12169:12174 Coq.ZArith.BinInt Z quot def
R12176:12177 SLF.Rules <> n1:70 var
R12179:12180 SLF.Rules <> n2:71 var
R12184:12184 SLF.Rules <> s:69 var
R12191:12194 SLF.LibSepReference <> eval ind
R12234:12234 SLF.Rules <> Q:72 var
R12199:12205 SLF.LibSepReference <> val_div constr
R12208:12214 SLF.LibSepReference <> val_int constr
R12216:12217 SLF.Rules <> n1:70 var
R12221:12227 SLF.LibSepReference <> val_int constr
R12229:12230 SLF.Rules <> n2:71 var
R12196:12196 SLF.Rules <> s:69 var
prf 12244:12253 <> triple_div
binder 12264:12265 <> n1:74
binder 12267:12268 <> n2:75
R12280:12285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12275:12278 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R12273:12274 SLF.Rules <> n2:75 var
R12286:12291 SLF.LibSepReference <> triple def
binder 12326:12326 <> r:76
R12331:12332 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R12359:12359 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R12334:12336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12333:12333 SLF.Rules <> r:76 var
R12337:12343 SLF.LibSepReference <> val_int constr
R12346:12351 Coq.ZArith.BinInt Z quot def
R12353:12354 SLF.Rules <> n1:74 var
R12356:12357 SLF.Rules <> n2:75 var
R12313:12315 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R12294:12300 SLF.LibSepReference <> val_div constr
R12302:12303 SLF.Rules <> n1:74 var
R12305:12306 SLF.Rules <> n2:75 var
R12401:12408 SLF.Rules <> eval_div defax
R12401:12408 SLF.Rules <> eval_div defax
R12420:12429 SLF.LibSepReference SepSimplArgs hempty_inv thm
R12420:12429 SLF.LibSepReference SepSimplArgs hempty_inv thm
R12444:12454 SLF.LibSepReference SepSimplArgs hpure_intro thm
R12444:12454 SLF.LibSepReference SepSimplArgs hpure_intro thm
ax 12971:12979 <> eval_rand
binder 12990:12990 <> s:77
binder 12992:12992 <> n:78
binder 12994:12994 <> Q:79
R13004:13009 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13000:13002 SLF.LibOrder <> ::comp_scope:x_'>'_x not
R12999:12999 SLF.Rules <> n:78 var
R13010:13010 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13043:13049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 13018:13019 <> n1:80
R13033:13036 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13023:13026 SLF.LibOrder <> ::comp_scope:x_'<='_x_'<'_x not
R13029:13031 SLF.LibOrder <> ::comp_scope:x_'<='_x_'<'_x not
R13027:13028 SLF.Rules <> n1:80 var
R13027:13028 SLF.Rules <> n1:80 var
R13032:13032 SLF.Rules <> n:78 var
R13037:13037 SLF.Rules <> Q:79 var
R13039:13040 SLF.Rules <> n1:80 var
R13042:13042 SLF.Rules <> s:77 var
R13050:13053 SLF.LibSepReference <> eval ind
R13080:13080 SLF.Rules <> Q:79 var
R13058:13065 SLF.LibSepReference <> val_rand constr
R13068:13074 SLF.LibSepReference <> val_int constr
R13076:13076 SLF.Rules <> n:78 var
R13055:13055 SLF.Rules <> s:77 var
prf 13400:13410 <> triple_rand
binder 13421:13421 <> n:82
R13431:13436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13427:13429 SLF.LibOrder <> ::comp_scope:x_'>'_x not
R13426:13426 SLF.Rules <> n:82 var
R13437:13442 SLF.LibSepReference <> triple def
binder 13474:13474 <> r:83
R13479:13480 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R13521:13521 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R13481:13487 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R13490:13491 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 13488:13489 <> n1:84
R13506:13509 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R13493:13495 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13492:13492 SLF.Rules <> r:83 var
R13496:13502 SLF.LibSepReference <> val_int constr
R13504:13505 SLF.Rules <> n1:84 var
R13511:13514 SLF.LibOrder <> ::comp_scope:x_'<='_x_'<'_x not
R13517:13519 SLF.LibOrder <> ::comp_scope:x_'<='_x_'<'_x not
R13515:13516 SLF.Rules <> n1:84 var
R13515:13516 SLF.Rules <> n1:84 var
R13520:13520 SLF.Rules <> n:82 var
R13461:13463 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R13445:13452 SLF.LibSepReference <> val_rand constr
R13454:13454 SLF.Rules <> n:82 var
R13555:13560 SLF.LibSepReference <> triple def
R13581:13589 SLF.Rules <> eval_rand defax
R13581:13589 SLF.Rules <> eval_rand defax
R13601:13610 SLF.LibSepReference SepSimplArgs hempty_inv thm
R13601:13610 SLF.LibSepReference SepSimplArgs hempty_inv thm
R13632:13642 SLF.LibSepReference SepSimplArgs hpure_intro thm
R13632:13642 SLF.LibSepReference SepSimplArgs hpure_intro thm
prf 14972:14981 <> triple_ref
binder 14992:14992 <> v:85
R14997:15002 SLF.LibSepReference <> triple def
binder 15033:15033 <> r:86
R15038:15045 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\exists'_x_'..'_x_','_x not
R15047:15048 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\exists'_x_'..'_x_','_x not
binder 15046:15046 <> p:87
R15065:15068 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*'_x not
R15049:15050 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R15064:15064 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R15052:15054 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15051:15051 SLF.Rules <> r:86 var
R15055:15061 SLF.LibSepReference <> val_loc constr
R15063:15063 SLF.Rules <> p:87 var
R15070:15074 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R15069:15069 SLF.Rules <> p:87 var
R15075:15075 SLF.Rules <> v:85 var
R15020:15022 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R15005:15011 SLF.LibSepReference <> val_ref constr
R15013:15013 SLF.Rules <> v:85 var
R15122:15129 SLF.LibSepReference <> eval_ref constr
R15122:15129 SLF.LibSepReference <> eval_ref constr
R15155:15164 SLF.LibSepReference SepSimplArgs hempty_inv thm
R15155:15164 SLF.LibSepReference SepSimplArgs hempty_inv thm
R15177:15193 SLF.LibSepReference Fmap update_empty thm
R15177:15193 SLF.LibSepReference Fmap update_empty thm
R15177:15193 SLF.LibSepReference Fmap update_empty thm
R15205:15217 SLF.LibSepReference SepSimplArgs hexists_intro thm
R15205:15217 SLF.LibSepReference SepSimplArgs hexists_intro thm
R15230:15242 SLF.LibSepReference SepSimplArgs hstar_hpure_l thm
R15230:15242 SLF.LibSepReference SepSimplArgs hstar_hpure_l thm
R15230:15242 SLF.LibSepReference SepSimplArgs hstar_hpure_l thm
R15262:15274 SLF.LibSepReference SepSimplArgs hsingle_intro thm
R15262:15274 SLF.LibSepReference SepSimplArgs hsingle_intro thm
prf 15470:15480 <> triple_ref'
binder 15491:15491 <> v:88
R15496:15501 SLF.LibSepReference <> triple def
R15528:15534 SLF.LibSepReference <> ::hprop_scope:'funloc'_x_'=>'_x not
R15536:15539 SLF.LibSepReference <> ::hprop_scope:'funloc'_x_'=>'_x not
binder 15535:15535 <> p:89
binder 15535:15535 <> p:90
binder 15535:15535 <> p:91
R15541:15545 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R15540:15540 SLF.Rules <> p:89 var
R15546:15546 SLF.Rules <> v:88 var
R15519:15521 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R15504:15510 SLF.LibSepReference <> val_ref constr
R15512:15512 SLF.Rules <> v:88 var
R15569:15578 SLF.Rules <> triple_ref thm
R15569:15578 SLF.Rules <> triple_ref thm
prf 16183:16194 <> triple_free'
binder 16205:16205 <> p:92
binder 16207:16207 <> v:93
R16212:16217 SLF.LibSepReference <> triple def
binder 16265:16265 <> r:94
R16270:16271 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R16284:16284 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R16273:16275 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16272:16272 SLF.Rules <> r:94 var
R16276:16283 SLF.LibSepReference <> val_unit constr
R16248:16252 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R16247:16247 SLF.Rules <> p:92 var
R16253:16253 SLF.Rules <> v:93 var
R16220:16227 SLF.LibSepReference <> val_free constr
R16230:16236 SLF.LibSepReference <> val_loc constr
R16238:16238 SLF.Rules <> p:92 var
R16331:16341 SLF.LibSepReference SepSimplArgs hsingle_inv thm
R16331:16341 SLF.LibSepReference SepSimplArgs hsingle_inv thm
R16354:16362 SLF.LibSepReference <> eval_free constr
R16354:16362 SLF.LibSepReference <> eval_free constr
R16377:16393 SLF.LibSepReference Fmap indom_single thm
R16377:16393 SLF.LibSepReference Fmap indom_single thm
R16407:16424 SLF.LibSepReference Fmap remove_single thm
R16407:16424 SLF.LibSepReference Fmap remove_single thm
R16407:16424 SLF.LibSepReference Fmap remove_single thm
R16433:16443 SLF.LibSepReference SepSimplArgs hpure_intro thm
R16433:16443 SLF.LibSepReference SepSimplArgs hpure_intro thm
prf 16611:16621 <> triple_free
binder 16632:16632 <> p:95
binder 16634:16634 <> v:96
R16639:16644 SLF.LibSepReference <> triple def
R16697:16699 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R16675:16679 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R16674:16674 SLF.Rules <> p:95 var
R16680:16680 SLF.Rules <> v:96 var
R16647:16654 SLF.LibSepReference <> val_free constr
R16657:16663 SLF.LibSepReference <> val_loc constr
R16665:16665 SLF.Rules <> p:95 var
R16731:16743 SLF.LibSepReference <> triple_conseq thm
R16745:16756 SLF.Rules <> triple_free' thm
R16731:16743 SLF.LibSepReference <> triple_conseq thm
R16745:16756 SLF.Rules <> triple_free' thm
prf 17398:17407 <> triple_get
binder 17418:17418 <> v:97
binder 17420:17420 <> p:98
R17425:17430 SLF.LibSepReference <> triple def
binder 17467:17467 <> r:99
R17480:17484 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*'_x not
R17492:17492 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*'_x not
R17472:17473 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R17479:17479 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R17475:17477 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17474:17474 SLF.Rules <> r:99 var
R17478:17478 SLF.Rules <> v:97 var
R17486:17490 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R17485:17485 SLF.Rules <> p:98 var
R17491:17491 SLF.Rules <> v:97 var
R17450:17454 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R17449:17449 SLF.Rules <> p:98 var
R17455:17455 SLF.Rules <> v:97 var
R17433:17439 SLF.LibSepReference <> val_get constr
R17441:17441 SLF.Rules <> p:98 var
R17540:17550 SLF.LibSepReference SepSimplArgs hsingle_inv thm
R17540:17550 SLF.LibSepReference SepSimplArgs hsingle_inv thm
R17562:17569 SLF.LibSepReference <> eval_get constr
R17562:17569 SLF.LibSepReference <> eval_get constr
R17584:17600 SLF.LibSepReference Fmap indom_single thm
R17584:17600 SLF.LibSepReference Fmap indom_single thm
R17617:17629 SLF.LibSepReference SepSimplArgs hstar_hpure_l thm
R17617:17629 SLF.LibSepReference SepSimplArgs hstar_hpure_l thm
R17617:17629 SLF.LibSepReference SepSimplArgs hstar_hpure_l thm
R17649:17664 SLF.LibSepReference Fmap read_single thm
R17649:17664 SLF.LibSepReference Fmap read_single thm
prf 18303:18312 <> triple_set
binder 18323:18323 <> w:100
binder 18325:18325 <> p:101
binder 18327:18327 <> v:102
R18332:18337 SLF.LibSepReference <> triple def
binder 18386:18386 <> r:103
R18406:18410 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*'_x not
R18418:18418 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*'_x not
R18391:18392 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R18405:18405 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R18394:18396 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18393:18393 SLF.Rules <> r:103 var
R18397:18404 SLF.LibSepReference <> val_unit constr
R18412:18416 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R18411:18411 SLF.Rules <> p:101 var
R18417:18417 SLF.Rules <> v:102 var
R18369:18373 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R18368:18368 SLF.Rules <> p:101 var
R18374:18374 SLF.Rules <> w:100 var
R18340:18346 SLF.LibSepReference <> val_set constr
R18349:18355 SLF.LibSepReference <> val_loc constr
R18357:18357 SLF.Rules <> p:101 var
R18360:18360 SLF.Rules <> v:102 var
R18466:18476 SLF.LibSepReference SepSimplArgs hsingle_inv thm
R18466:18476 SLF.LibSepReference SepSimplArgs hsingle_inv thm
R18488:18495 SLF.LibSepReference <> eval_set constr
R18488:18495 SLF.LibSepReference <> eval_set constr
R18509:18525 SLF.LibSepReference Fmap indom_single thm
R18509:18525 SLF.LibSepReference Fmap indom_single thm
R18541:18558 SLF.LibSepReference Fmap update_single thm
R18541:18558 SLF.LibSepReference Fmap update_single thm
R18541:18558 SLF.LibSepReference Fmap update_single thm
R18570:18582 SLF.LibSepReference SepSimplArgs hstar_hpure_l thm
R18570:18582 SLF.LibSepReference SepSimplArgs hstar_hpure_l thm
R18600:18612 SLF.LibSepReference SepSimplArgs hsingle_intro thm
R18600:18612 SLF.LibSepReference SepSimplArgs hsingle_intro thm
mod 18908:18922 <> ExamplePrograms
R18932:18944 SLF.LibSepReference ProgramSyntax <> mod
def 19649:19652 ExamplePrograms incr
R19656:19658 SLF.LibSepReference <> val ind
R19665:19671 SLF.LibSepReference <> val_fun constr
R19683:19689 SLF.LibSepReference <> trm_let constr
R19733:19739 SLF.LibSepReference <> trm_let constr
R19834:19840 SLF.LibSepReference <> trm_app constr
R19875:19881 SLF.LibSepReference <> trm_var constr
R19843:19849 SLF.LibSepReference <> trm_app constr
R19860:19866 SLF.LibSepReference <> trm_var constr
R19851:19857 SLF.LibSepReference <> val_set constr
R19746:19752 SLF.LibSepReference <> trm_app constr
R19816:19822 SLF.LibSepReference <> val_int constr
R19755:19761 SLF.LibSepReference <> trm_app constr
R19801:19807 SLF.LibSepReference <> trm_var constr
R19763:19769 SLF.LibSepReference <> val_add constr
R19696:19702 SLF.LibSepReference <> trm_app constr
R19713:19719 SLF.LibSepReference <> trm_var constr
R19704:19710 SLF.LibSepReference <> val_get constr
def 20009:20013 ExamplePrograms incr'
R20017:20019 SLF.LibSepReference <> val ind
R20026:20028 SLF.LibSepReference <> ::trm_scope:'<{'_x_'}>' not
R20104:20106 SLF.LibSepReference <> ::trm_scope:'<{'_x_'}>' not
R20029:20032 SLF.LibSepReference <> :trm:val_scope:'fun'_x_'=>'_x not
R20035:20045 SLF.LibSepReference <> :trm:val_scope:'fun'_x_'=>'_x not
R20033:20034 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''p' not
R20046:20049 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R20052:20054 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R20059:20069 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R20050:20051 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''n' not
R20055:20056 SLF.LibSepReference <> :trm:trm_scope:'!'_x not
R20057:20058 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''p' not
R20070:20073 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R20076:20078 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R20085:20095 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R20074:20075 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''m' not
R20081:20083 SLF.LibSepReference <> :trm:trm_scope:x_'+'_x not
R20079:20080 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''n' not
R20098:20101 SLF.LibSepReference <> :trm:trm_scope:x_':='_x not
R20096:20097 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''p' not
R20102:20103 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''m' not
prf 20183:20195 ExamplePrograms incr_eq_incr'
R20205:20207 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20201:20204 SLF.Rules ExamplePrograms incr def
R20208:20212 SLF.Rules ExamplePrograms incr' def
prf 20474:20484 ExamplePrograms triple_incr
R20498:20500 SLF.LibSepReference <> loc def
binder 20496:20496 <> p:104
R20506:20508 SLF.LibInt <> ::Int_scope:'int' not
binder 20504:20504 <> n:105
R20514:20519 SLF.LibSepReference <> triple def
R20567:20572 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R20576:20576 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R20566:20566 SLF.Rules <> p:104 var
R20574:20574 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20573:20573 SLF.Rules <> n:105 var
R20544:20548 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R20543:20543 SLF.Rules <> p:104 var
R20549:20549 SLF.Rules <> n:105 var
R20522:20528 SLF.LibSepReference <> trm_app constr
R20535:20535 SLF.Rules <> p:104 var
R20530:20533 SLF.Rules ExamplePrograms incr def
R20898:20911 SLF.Rules <> triple_app_fun thm
R20898:20911 SLF.Rules <> triple_app_fun thm
R20981:20990 SLF.Rules <> triple_let thm
R20981:20990 SLF.Rules <> triple_let thm
R21029:21038 SLF.Rules <> triple_get thm
R21029:21038 SLF.Rules <> triple_get thm
R21154:21165 SLF.LibSepReference <> triple_hpure thm
R21154:21165 SLF.LibSepReference <> triple_hpure thm
R21222:21231 SLF.Rules <> triple_let thm
R21222:21231 SLF.Rules <> triple_let thm
R21297:21315 SLF.LibSepReference <> triple_conseq_frame thm
R21297:21315 SLF.LibSepReference <> triple_conseq_frame thm
R21379:21388 SLF.Rules <> triple_add thm
R21379:21388 SLF.Rules <> triple_add thm
R21539:21550 SLF.LibSepReference <> triple_hpure thm
R21539:21550 SLF.LibSepReference <> triple_hpure thm
R21603:21621 SLF.LibSepReference <> triple_conseq_frame thm
R21603:21621 SLF.LibSepReference <> triple_conseq_frame thm
R21637:21646 SLF.Rules <> triple_set thm
R21637:21646 SLF.Rules <> triple_set thm
def 21871:21885 ExamplePrograms succ_using_incr
R21889:21891 SLF.LibSepReference <> val ind
R21898:21900 SLF.LibSepReference <> ::trm_scope:'<{'_x_'}>' not
R22010:22012 SLF.LibSepReference <> ::trm_scope:'<{'_x_'}>' not
R21901:21904 SLF.LibSepReference <> :trm:val_scope:'fun'_x_'=>'_x not
R21907:21917 SLF.LibSepReference <> :trm:val_scope:'fun'_x_'=>'_x not
R21905:21906 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''n' not
R21918:21921 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R21924:21926 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R21937:21947 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R21922:21923 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''r' not
R21934:21934 SLF.LibSepReference <> :trm:trm_scope:x_x not
R21927:21933 SLF.LibSepReference <> val_ref constr
R21935:21936 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''n' not
R21955:21963 SLF.LibSepReference <> :trm:trm_scope:x_';'_x not
R21952:21952 SLF.LibSepReference <> :trm:trm_scope:x_x not
R21948:21951 SLF.Rules ExamplePrograms incr def
R21953:21954 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''r' not
R21964:21967 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R21970:21972 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R21977:21987 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R21968:21969 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''x' not
R21973:21974 SLF.LibSepReference <> :trm:trm_scope:'!'_x not
R21975:21976 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''r' not
R21999:22007 SLF.LibSepReference <> :trm:trm_scope:x_';'_x not
R21996:21996 SLF.LibSepReference <> :trm:trm_scope:x_x not
R21988:21995 SLF.LibSepReference <> val_free constr
R21997:21998 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''r' not
R22008:22009 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''x' not
prf 22077:22098 ExamplePrograms triple_succ_using_incr
R22112:22114 SLF.LibInt <> ::Int_scope:'int' not
binder 22110:22110 <> n:106
R22120:22125 SLF.LibSepReference <> triple def
binder 22172:22172 <> v:107
R22177:22178 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R22196:22196 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R22180:22182 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22179:22179 SLF.Rules <> v:107 var
R22183:22189 SLF.LibSepReference <> val_int constr
R22193:22193 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22192:22192 SLF.Rules <> n:106 var
R22159:22161 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R22128:22134 SLF.LibSepReference <> trm_app constr
R22152:22152 SLF.Rules <> n:106 var
R22136:22150 SLF.Rules ExamplePrograms succ_using_incr def
R22559:22572 SLF.Rules <> triple_app_fun thm
R22559:22572 SLF.Rules <> triple_app_fun thm
R22591:22600 SLF.Rules <> triple_let thm
R22591:22600 SLF.Rules <> triple_let thm
R22611:22620 SLF.Rules <> triple_ref thm
R22611:22620 SLF.Rules <> triple_ref thm
R22650:22663 SLF.LibSepReference <> triple_hexists thm
R22650:22663 SLF.LibSepReference <> triple_hexists thm
R22681:22692 SLF.LibSepReference <> triple_hpure thm
R22681:22692 SLF.LibSepReference <> triple_hpure thm
R22719:22728 SLF.Rules <> triple_seq thm
R22719:22728 SLF.Rules <> triple_seq thm
R22740:22750 SLF.Rules ExamplePrograms triple_incr thm
R22740:22750 SLF.Rules ExamplePrograms triple_incr thm
R22764:22773 SLF.Rules <> triple_let thm
R22764:22773 SLF.Rules <> triple_let thm
R22785:22794 SLF.Rules <> triple_get thm
R22785:22794 SLF.Rules <> triple_get thm
R22824:22835 SLF.LibSepReference <> triple_hpure thm
R22824:22835 SLF.LibSepReference <> triple_hpure thm
R22862:22871 SLF.Rules <> triple_seq thm
R22862:22871 SLF.Rules <> triple_seq thm
R22883:22893 SLF.Rules <> triple_free thm
R22883:22893 SLF.Rules <> triple_free thm
R22907:22916 SLF.Rules <> triple_val thm
R22907:22916 SLF.Rules <> triple_val thm
R22949:22963 SLF.Rules ExamplePrograms <> mod
mod 23658:23676 <> ProofsSameSemantics
def 24336:24344 ProofsSameSemantics eval_like
R24353:24355 SLF.LibSepReference <> trm ind
binder 24347:24348 <> t1:108
binder 24350:24351 <> t2:109
binder 24377:24377 <> s:110
binder 24379:24379 <> Q:111
R24393:24396 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24382:24385 SLF.LibSepReference <> eval ind
R24392:24392 SLF.Rules <> Q:111 var
R24389:24390 SLF.Rules <> t1:108 var
R24387:24387 SLF.Rules <> s:110 var
R24397:24400 SLF.LibSepReference <> eval ind
R24407:24407 SLF.Rules <> Q:111 var
R24404:24405 SLF.Rules <> t2:109 var
R24402:24402 SLF.Rules <> s:110 var
prf 24628:24643 ProofsSameSemantics triple_eval_like
binder 24654:24655 <> t1:112
binder 24657:24658 <> t2:113
binder 24660:24660 <> H:114
binder 24662:24662 <> Q:115
R24682:24687 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24667:24675 SLF.Rules ProofsSameSemantics eval_like def
R24680:24681 SLF.Rules <> t2:113 var
R24677:24678 SLF.Rules <> t1:112 var
R24701:24706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24688:24693 SLF.LibSepReference <> triple def
R24700:24700 SLF.Rules <> Q:115 var
R24698:24698 SLF.Rules <> H:114 var
R24695:24696 SLF.Rules <> t1:112 var
R24707:24712 SLF.LibSepReference <> triple def
R24719:24719 SLF.Rules <> Q:115 var
R24717:24717 SLF.Rules <> H:114 var
R24714:24715 SLF.Rules <> t2:113 var
R24752:24757 SLF.LibSepReference <> triple def
R24777:24785 SLF.Rules ProofsSameSemantics eval_like def
R24801:24806 SLF.LibSepReference <> triple def
prf 25178:25200 ProofsSameSemantics eval_like_eta_reduction
R25214:25216 SLF.LibSepReference <> trm ind
binder 25212:25212 <> t:116
R25222:25224 SLF.LibSepVar <> var def
binder 25220:25220 <> x:117
R25230:25238 SLF.Rules ProofsSameSemantics eval_like def
R25243:25249 SLF.LibSepReference <> trm_let constr
R25255:25255 SLF.Rules <> x:117 var
R25253:25253 SLF.Rules <> t:116 var
R25251:25251 SLF.Rules <> x:117 var
R25240:25240 SLF.Rules <> t:116 var
R25291:25298 SLF.LibSepReference <> eval_let constr
R25291:25298 SLF.LibSepReference <> eval_let constr
R25320:25330 SLF.LibSepVar <> var_eq_spec thm
R25320:25330 SLF.LibSepVar <> var_eq_spec thm
R25320:25330 SLF.LibSepVar <> var_eq_spec thm
R25362:25369 SLF.LibSepReference <> eval_val constr
R25362:25369 SLF.LibSepReference <> eval_val constr
prf 25549:25571 ProofsSameSemantics eval_like_eta_expansion
R25585:25587 SLF.LibSepReference <> trm ind
binder 25583:25583 <> t:118
R25593:25595 SLF.LibSepVar <> var def
binder 25591:25591 <> x:119
R25601:25609 SLF.Rules ProofsSameSemantics eval_like def
R25627:25627 SLF.Rules <> t:118 var
R25612:25618 SLF.LibSepReference <> trm_let constr
R25624:25624 SLF.Rules <> x:119 var
R25622:25622 SLF.Rules <> t:118 var
R25620:25620 SLF.Rules <> x:119 var
prf 25990:26005 ProofsSameSemantics eta_same_triples
R26019:26021 SLF.LibSepReference <> trm ind
binder 26017:26017 <> t:120
R26027:26029 SLF.LibSepVar <> var def
binder 26025:26025 <> x:121
binder 26032:26032 <> H:122
binder 26034:26034 <> Q:123
R26052:26056 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R26040:26045 SLF.LibSepReference <> triple def
R26051:26051 SLF.Rules <> Q:123 var
R26049:26049 SLF.Rules <> H:122 var
R26047:26047 SLF.Rules <> t:120 var
R26057:26062 SLF.LibSepReference <> triple def
R26082:26082 SLF.Rules <> Q:123 var
R26080:26080 SLF.Rules <> H:122 var
R26065:26071 SLF.LibSepReference <> trm_let constr
R26077:26077 SLF.Rules <> x:121 var
R26075:26075 SLF.Rules <> t:120 var
R26073:26073 SLF.Rules <> x:121 var
R26118:26133 SLF.Rules ProofsSameSemantics triple_eval_like thm
R26118:26133 SLF.Rules ProofsSameSemantics triple_eval_like thm
R26143:26165 SLF.Rules ProofsSameSemantics eval_like_eta_reduction thm
R26143:26165 SLF.Rules ProofsSameSemantics eval_like_eta_reduction thm
R26180:26195 SLF.Rules ProofsSameSemantics triple_eval_like thm
R26180:26195 SLF.Rules ProofsSameSemantics triple_eval_like thm
R26205:26227 SLF.Rules ProofsSameSemantics eval_like_eta_expansion prfax
R26205:26227 SLF.Rules ProofsSameSemantics eval_like_eta_expansion prfax
prf 26485:26498 ProofsSameSemantics triple_app_fun
binder 26509:26509 <> x:124
binder 26511:26512 <> v1:125
binder 26514:26515 <> v2:126
binder 26517:26518 <> t1:127
binder 26520:26520 <> H:128
binder 26522:26522 <> Q:129
R26544:26549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26529:26531 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26527:26528 SLF.Rules <> v1:125 var
R26532:26538 SLF.LibSepReference <> val_fun constr
R26542:26543 SLF.Rules <> t1:127 var
R26540:26540 SLF.Rules <> x:124 var
R26576:26581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26550:26555 SLF.LibSepReference <> triple def
R26575:26575 SLF.Rules <> Q:129 var
R26573:26573 SLF.Rules <> H:128 var
R26558:26562 SLF.LibSepReference <> subst def
R26569:26570 SLF.Rules <> t1:127 var
R26566:26567 SLF.Rules <> v2:126 var
R26564:26564 SLF.Rules <> x:124 var
R26582:26587 SLF.LibSepReference <> triple def
R26607:26607 SLF.Rules <> Q:129 var
R26605:26605 SLF.Rules <> H:128 var
R26590:26596 SLF.LibSepReference <> trm_app constr
R26601:26602 SLF.Rules <> v2:126 var
R26598:26599 SLF.Rules <> v1:125 var
R26645:26660 SLF.Rules ProofsSameSemantics triple_eval_like thm
R26645:26660 SLF.Rules ProofsSameSemantics triple_eval_like thm
R26685:26696 SLF.LibSepReference <> eval_app_fun constr
R26685:26696 SLF.LibSepReference <> eval_app_fun constr
prf 27250:27269 ProofsSameSemantics triple_trm_seq_assoc
binder 27280:27281 <> t1:130
binder 27283:27284 <> t2:131
binder 27286:27287 <> t3:132
binder 27289:27289 <> H:133
binder 27291:27291 <> Q:134
R27335:27340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27296:27301 SLF.LibSepReference <> triple def
R27334:27334 SLF.Rules <> Q:134 var
R27332:27332 SLF.Rules <> H:133 var
R27304:27310 SLF.LibSepReference <> trm_seq constr
R27328:27329 SLF.Rules <> t3:132 var
R27313:27319 SLF.LibSepReference <> trm_seq constr
R27324:27325 SLF.Rules <> t2:131 var
R27321:27322 SLF.Rules <> t1:130 var
R27341:27346 SLF.LibSepReference <> triple def
R27379:27379 SLF.Rules <> Q:134 var
R27377:27377 SLF.Rules <> H:133 var
R27349:27355 SLF.LibSepReference <> trm_seq constr
R27361:27367 SLF.LibSepReference <> trm_seq constr
R27372:27373 SLF.Rules <> t3:132 var
R27369:27370 SLF.Rules <> t2:131 var
R27357:27358 SLF.Rules <> t1:130 var
R27440:27458 SLF.Rules ProofsSameSemantics <> mod
mod 27580:27587 <> LetFrame
ax 27647:27656 LetFrame triple_let
binder 27667:27667 <> x:135
binder 27669:27670 <> t1:136
binder 27672:27673 <> t2:137
binder 27675:27676 <> Q1:138
binder 27678:27678 <> H:139
binder 27680:27680 <> Q:140
R27699:27704 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27685:27690 SLF.LibSepReference <> triple def
R27697:27698 SLF.Rules <> Q1:138 var
R27695:27695 SLF.Rules <> H:139 var
R27692:27693 SLF.Rules <> t1:136 var
R27705:27705 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27749:27755 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 27713:27714 <> v1:141
R27717:27722 SLF.LibSepReference <> triple def
R27748:27748 SLF.Rules <> Q:140 var
R27741:27742 SLF.Rules <> Q1:138 var
R27744:27745 SLF.Rules <> v1:141 var
R27725:27729 SLF.LibSepReference <> subst def
R27736:27737 SLF.Rules <> t2:137 var
R27733:27734 SLF.Rules <> v1:141 var
R27731:27731 SLF.Rules <> x:135 var
R27756:27761 SLF.LibSepReference <> triple def
R27783:27783 SLF.Rules <> Q:140 var
R27781:27781 SLF.Rules <> H:139 var
R27764:27770 SLF.LibSepReference <> trm_let constr
R27777:27778 SLF.Rules <> t2:137 var
R27774:27775 SLF.Rules <> t1:136 var
R27772:27772 SLF.Rules <> x:135 var
prf 28520:28535 LetFrame triple_let_frame
binder 28546:28546 <> x:143
binder 28548:28549 <> t1:144
binder 28551:28552 <> t2:145
binder 28554:28555 <> Q1:146
binder 28557:28557 <> H:147
binder 28559:28560 <> H1:148
binder 28562:28563 <> H2:149
binder 28565:28565 <> Q:150
R28585:28590 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28570:28575 SLF.LibSepReference <> triple def
R28583:28584 SLF.Rules <> Q1:146 var
R28580:28581 SLF.Rules <> H1:148 var
R28577:28578 SLF.Rules <> t1:144 var
R28605:28610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28592:28596 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'==>'_x not
R28591:28591 SLF.Rules <> H:147 var
R28599:28602 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*'_x not
R28597:28598 SLF.Rules <> H1:148 var
R28603:28604 SLF.Rules <> H2:149 var
R28611:28611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28661:28667 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 28619:28620 <> v1:151
R28623:28628 SLF.LibSepReference <> triple def
R28660:28660 SLF.Rules <> Q:150 var
R28652:28655 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*'_x not
R28647:28648 SLF.Rules <> Q1:146 var
R28650:28651 SLF.Rules <> v1:151 var
R28656:28657 SLF.Rules <> H2:149 var
R28631:28635 SLF.LibSepReference <> subst def
R28642:28643 SLF.Rules <> t2:145 var
R28639:28640 SLF.Rules <> v1:151 var
R28637:28637 SLF.Rules <> x:143 var
R28668:28673 SLF.LibSepReference <> triple def
R28695:28695 SLF.Rules <> Q:150 var
R28693:28693 SLF.Rules <> H:147 var
R28676:28682 SLF.LibSepReference <> trm_let constr
R28689:28690 SLF.Rules <> t2:145 var
R28686:28687 SLF.Rules <> t1:144 var
R28684:28684 SLF.Rules <> x:143 var
R28865:28869 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*+'_x not
R28839:28848 SLF.Rules LetFrame triple_let defax
R28865:28869 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*+'_x not
R28839:28848 SLF.Rules LetFrame triple_let defax
R28889:28907 SLF.LibSepReference <> triple_conseq_frame thm
R28889:28907 SLF.LibSepReference <> triple_conseq_frame thm
R28986:28993 SLF.Rules LetFrame <> mod
mod 29242:29248 <> DivSpec
ax 29309:29318 DivSpec triple_div
binder 29329:29330 <> n1:152
binder 29332:29333 <> n2:153
R29345:29350 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29340:29343 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R29338:29339 SLF.Rules <> n2:153 var
R29351:29356 SLF.LibSepReference <> triple def
binder 29391:29391 <> r:154
R29396:29397 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R29424:29424 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R29399:29401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29398:29398 SLF.Rules <> r:154 var
R29402:29408 SLF.LibSepReference <> val_int constr
R29411:29416 Coq.ZArith.BinInt Z quot def
R29418:29419 SLF.Rules <> n1:152 var
R29421:29422 SLF.Rules <> n2:153 var
R29378:29380 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R29359:29365 SLF.LibSepReference <> val_div constr
R29367:29368 SLF.Rules <> n1:152 var
R29370:29371 SLF.Rules <> n2:153 var
ax 29527:29537 DivSpec triple_div'
binder 29548:29549 <> n1:156
binder 29551:29552 <> n2:157
R29557:29562 SLF.LibSepReference <> triple def
binder 29604:29604 <> r:158
R29609:29610 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R29637:29637 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R29612:29614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29611:29611 SLF.Rules <> r:158 var
R29615:29621 SLF.LibSepReference <> val_int constr
R29624:29629 Coq.ZArith.BinInt Z quot def
R29631:29632 SLF.Rules <> n1:156 var
R29634:29635 SLF.Rules <> n2:157 var
R29584:29585 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R29593:29593 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R29588:29591 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R29586:29587 SLF.Rules <> n2:157 var
R29565:29571 SLF.LibSepReference <> val_div constr
R29573:29574 SLF.Rules <> n1:156 var
R29576:29577 SLF.Rules <> n2:157 var
prf 29752:29778 DivSpec triple_div'_from_triple_div
binder 29789:29790 <> n1:160
binder 29792:29793 <> n2:161
R29798:29803 SLF.LibSepReference <> triple def
binder 29845:29845 <> r:162
R29850:29851 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R29878:29878 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R29853:29855 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29852:29852 SLF.Rules <> r:162 var
R29856:29862 SLF.LibSepReference <> val_int constr
R29865:29870 Coq.ZArith.BinInt Z quot def
R29872:29873 SLF.Rules <> n1:160 var
R29875:29876 SLF.Rules <> n2:161 var
R29825:29826 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R29834:29834 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R29829:29832 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R29827:29828 SLF.Rules <> n2:161 var
R29806:29812 SLF.LibSepReference <> val_div constr
R29814:29815 SLF.Rules <> n1:160 var
R29817:29818 SLF.Rules <> n2:161 var
R29912:29924 SLF.LibSepReference <> triple_hpure' defax
R29912:29924 SLF.LibSepReference <> triple_hpure' defax
R29934:29943 SLF.Rules DivSpec triple_div defax
R29934:29943 SLF.Rules DivSpec triple_div defax
prf 30093:30119 DivSpec triple_div_from_triple_div'
binder 30130:30131 <> n1:163
binder 30133:30134 <> n2:164
R30146:30151 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30141:30144 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R30139:30140 SLF.Rules <> n2:164 var
R30152:30157 SLF.LibSepReference <> triple def
binder 30192:30192 <> r:165
R30197:30198 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R30225:30225 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R30200:30202 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30199:30199 SLF.Rules <> r:165 var
R30203:30209 SLF.LibSepReference <> val_int constr
R30212:30217 Coq.ZArith.BinInt Z quot def
R30219:30220 SLF.Rules <> n1:163 var
R30222:30223 SLF.Rules <> n2:164 var
R30179:30181 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R30160:30166 SLF.LibSepReference <> val_div constr
R30168:30169 SLF.Rules <> n1:163 var
R30171:30172 SLF.Rules <> n2:164 var
R30259:30271 SLF.LibSepReference <> triple_conseq thm
R30259:30271 SLF.LibSepReference <> triple_conseq thm
R30280:30289 SLF.Rules DivSpec triple_div defax
R30280:30289 SLF.Rules DivSpec triple_div defax
R30577:30583 SLF.Rules DivSpec <> mod
mod 30727:30736 <> MatchStyle
ax 30807:30816 MatchStyle triple_ref
binder 30827:30827 <> v:166
R30832:30837 SLF.LibSepReference <> triple def
binder 30868:30868 <> r:167
R30873:30880 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\exists'_x_'..'_x_','_x not
R30882:30883 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\exists'_x_'..'_x_','_x not
binder 30881:30881 <> p:168
R30900:30903 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'\*'_x not
R30884:30885 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R30899:30899 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R30887:30889 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30886:30886 SLF.Rules <> r:167 var
R30890:30896 SLF.LibSepReference <> val_loc constr
R30898:30898 SLF.Rules <> p:168 var
R30905:30909 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R30904:30904 SLF.Rules <> p:168 var
R30910:30910 SLF.Rules <> v:166 var
R30855:30857 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R30840:30846 SLF.LibSepReference <> val_ref constr
R30848:30848 SLF.Rules <> v:166 var
ax 31062:31072 MatchStyle triple_ref'
binder 31083:31083 <> v:170
R31088:31093 SLF.LibSepReference <> triple def
binder 31124:31124 <> r:171
R31135:31135 SLF.Rules <> r:171 var
R31158:31164 SLF.LibSepReference <> val_loc constr
R31173:31177 SLF.LibSepReference SepSimplArgs ::hprop_scope:x_'~~>'_x not
R31178:31178 SLF.Rules <> v:170 var
R31202:31203 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R31209:31209 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R31204:31208 Coq.Init.Logic <> False ind
R31111:31113 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R31096:31102 SLF.LibSepReference <> val_ref constr
R31104:31104 SLF.Rules <> v:170 var
R31365:31374 SLF.Rules MatchStyle <> mod
mod 31560:31575 <> ExamplePrograms2
R31585:31597 SLF.LibSepReference ProgramSyntax <> mod
R31607:31617 SLF.Basic Facto <> mod
ax 31742:31754 ExamplePrograms2 triple_hpure'
binder 31765:31765 <> t:174
binder 31768:31768 <> P:175
binder 31776:31776 <> Q:176
R31781:31781 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31801:31807 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31783:31786 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31782:31782 SLF.Rules <> P:175 var
R31787:31792 SLF.LibSepReference <> triple def
R31800:31800 SLF.Rules <> Q:176 var
R31796:31798 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R31794:31794 SLF.Rules <> t:174 var
R31808:31813 SLF.LibSepReference <> triple def
R31822:31822 SLF.Rules <> Q:176 var
R31817:31818 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R31820:31820 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R31819:31819 SLF.Rules <> P:175 var
R31815:31815 SLF.Rules <> t:174 var
def 31982:31989 ExamplePrograms2 factorec
R31993:31995 SLF.LibSepReference <> val ind
R32002:32004 SLF.LibSepReference <> ::trm_scope:'<{'_x_'}>' not
R32162:32164 SLF.LibSepReference <> ::trm_scope:'<{'_x_'}>' not
R32005:32008 SLF.LibSepReference <> :trm:val_scope:'fix'_x_x_'=>'_x not
R32011:32011 SLF.LibSepReference <> :trm:val_scope:'fix'_x_x_'=>'_x not
R32014:32024 SLF.LibSepReference <> :trm:val_scope:'fix'_x_x_'=>'_x not
R32009:32010 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''f' not
R32012:32013 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''n' not
R32025:32028 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R32031:32033 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R32043:32053 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R32029:32030 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''b' not
R32034:32034 SLF.LibSepReference <> :trm:trm_scope:'('_x_')' not
R32042:32042 SLF.LibSepReference <> :trm:trm_scope:'('_x_')' not
R32037:32040 SLF.LibSepReference <> :trm:trm_scope:x_'<='_x not
R32035:32036 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''n' not
R32054:32056 SLF.LibSepReference <> :trm:trm_scope:'if'_x_'then'_x_'else'_x not
R32059:32073 SLF.LibSepReference <> :trm:trm_scope:'if'_x_'then'_x_'else'_x not
R32075:32089 SLF.LibSepReference <> :trm:trm_scope:'if'_x_'then'_x_'else'_x not
R32057:32058 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''b' not
R32090:32093 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R32096:32098 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R32105:32122 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R32094:32095 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''x' not
R32101:32103 SLF.LibSepReference <> :trm:trm_scope:x_'-'_x not
R32099:32100 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''n' not
R32123:32126 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R32129:32131 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R32137:32154 SLF.LibSepReference <> :trm:trm_scope:'let'_x_'='_x_'in'_x not
R32127:32128 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''y' not
R32134:32134 SLF.LibSepReference <> :trm:trm_scope:x_x not
R32132:32133 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''f' not
R32135:32136 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''x' not
R32157:32159 SLF.LibSepReference <> :trm:trm_scope:x_'*'_x not
R32155:32156 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''n' not
R32160:32161 SLF.LibSepVar NotationForVariables :trm:trm_scope:'''y' not
prf 32794:32808 ExamplePrograms2 triple_factorec
binder 32819:32819 <> n:178
R32830:32835 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32825:32828 SLF.LibOrder <> ::comp_scope:x_'>='_x not
R32824:32824 SLF.Rules <> n:178 var
R32836:32841 SLF.LibSepReference <> triple def
binder 32873:32873 <> r:179
R32878:32879 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R32891:32891 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\['_x_']' not
R32881:32883 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32880:32880 SLF.Rules <> r:179 var
R32884:32888 SLF.Basic Facto facto defax
R32890:32890 SLF.Rules <> n:178 var
R32860:32862 SLF.LibSepReference SepSimplArgs ::hprop_scope:'\[]' not
R32844:32851 SLF.Rules ExamplePrograms2 factorec def
R32853:32853 SLF.Rules <> n:178 var
R32938:32943 SLF.LibWf <> downto def
R32938:32943 SLF.LibWf <> downto def
R32968:32981 SLF.Rules <> triple_app_fix thm
R32968:32981 SLF.Rules <> triple_app_fix thm
R33000:33009 SLF.Rules <> triple_let thm
R33000:33009 SLF.Rules <> triple_let thm
R33022:33030 SLF.LibSepReference <> triple_le thm
R33022:33030 SLF.LibSepReference <> triple_le thm
R33060:33072 SLF.Rules ExamplePrograms2 triple_hpure' defax
R33060:33072 SLF.Rules ExamplePrograms2 triple_hpure' defax
R33099:33107 SLF.Rules <> triple_if thm
R33099:33107 SLF.Rules <> triple_if thm
R33130:33139 SLF.Rules <> triple_val thm
R33130:33139 SLF.Rules <> triple_val thm
R33159:33168 SLF.Basic Facto facto_init defax
R33159:33168 SLF.Basic Facto facto_init defax
R33159:33168 SLF.Basic Facto facto_init defax
R33159:33168 SLF.Basic Facto facto_init defax
R33190:33199 SLF.Rules <> triple_let thm
R33190:33199 SLF.Rules <> triple_let thm
R33212:33221 SLF.LibSepReference <> triple_sub thm
R33212:33221 SLF.LibSepReference <> triple_sub thm
R33250:33262 SLF.Rules ExamplePrograms2 triple_hpure' defax
R33250:33262 SLF.Rules ExamplePrograms2 triple_hpure' defax
R33289:33298 SLF.Rules <> triple_let thm
R33289:33298 SLF.Rules <> triple_let thm
R33349:33361 SLF.Rules ExamplePrograms2 triple_hpure' defax
R33349:33361 SLF.Rules ExamplePrograms2 triple_hpure' defax
R33395:33397 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33388:33392 SLF.Basic Facto facto defax
R33399:33401 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R33402:33406 SLF.Basic Facto facto defax
R33410:33412 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R33395:33397 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33388:33392 SLF.Basic Facto facto defax
R33399:33401 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R33402:33406 SLF.Basic Facto facto defax
R33410:33412 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R33426:33435 SLF.Basic Facto facto_step defax
R33426:33435 SLF.Basic Facto facto_step defax
R33467:33476 SLF.LibSepReference <> triple_mul thm
R33467:33476 SLF.LibSepReference <> triple_mul thm
R33500:33515 SLF.Rules ExamplePrograms2 <> mod
